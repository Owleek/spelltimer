@use 'sass:color';
@use '../../variables.scss' as vars;

.Playground {
  width: 100vw;
  height: 100vh;
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
  position: relative;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.Playground__header {
  padding-bottom: 40px;
}

.Playground__inner {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 1rem 0;
}


.Playground__box {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: vars.$uppperBackground;
}

.Playground__boxHeader {
  width: 100%;
  padding: 1rem;
  padding-bottom: 0;
  display: grid;
  grid-template-columns: 60px 1fr 60px;
}

.Playground__boxBody {
  padding-top: 4px;
  width: 900px;
  height: 500px;
  display: grid;
  grid-template-rows: repeat(2, 46.363%);
  grid-template-columns: repeat(3, 31.684%);
  column-gap: 1.236%;
  row-gap: 2.424%;

  justify-content: center;
  align-content: center;

  &.mobilePortrait {
    grid-template-rows: repeat(3, 31.684%);
    grid-template-columns: repeat(2, 46.363%);
  }
}

.Playground__slotBox {
  display: inline-flex;
  width: 100%;
  height: 100%;
  position: relative;
  padding: vars.$slotPadding;
  background-color: vars.$lowerBackground;
  box-shadow: vars.$innerSlotBoxShadow;
  overflow: hidden;
}

.Playground__slotBox.void {
  background-color: rgb(61, 61, 61);
}

.Playground__slotEasyShadow {
  box-shadow: 0 0 10px 0px rgba(0, 0, 0, 0.9) inset;
}

.Playground__slotHeavyShadow {
  position: relative;

  &::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: 100;
    left: 0;
    top: 0;
    box-shadow: 0 0 10px 5px rgba(0, 0, 0, 0.9) inset;
  }
}

.Playground__slotSettings {
  width: 100%;
  height: 100%;
  position: absolute;
  left: 0;
  top: 0;
  overflow: hidden;
  user-select: none;
  z-index: 10;
}

.appStatus {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 60px;
  height: 60px;
  padding: 1rem;
  transition: fill ease vars.$transitionTime;
  fill: #3d3d3d;
  filter: blur(0.2px) brightness(0.7);
  stroke: rgba(255, 255, 255, 0.1);

  &.active {
    fill: #fdfb00 !important;
    filter: drop-shadow(0 0 8px rgba(255, 255, 100, 0.6));
  }

  &:after {
    content: "";
    position: absolute;
    top: 50%;
    left: 32%;
    width: 25%;
    height: 25%;
    transform: translateY(-50%);
    border-radius: 50%;
    background: radial-gradient(white 0%, transparent 100%);
    opacity: 0.2;
    pointer-events: none;
    filter: blur(3px);
  }

  svg {
    max-width: 100%;
    max-height: 100%;
  }
}

.Playground__button {
  width: 60px;
  height: 60px;
  border: 1px solid #222;
  fill:rgb(214 214 214);
  border-radius: 8px;
  padding: 1rem;
  background: linear-gradient(to right, #3f3e3e, #484747, #3f3e3e);
  box-shadow: 0px 1px 0px 0px rgba(0, 0, 0, 0.35) inset, 0 2px 5px 0px rgba(0, 0, 0, 0.5), 0 0px 25px 0px rgba(0, 0, 0, 0.15);
  position: relative;
  cursor: pointer;
  transition: all ease-in-out vars.$transitionTime;
  transform: scale(1);

  &::before {
    content: '';
    position: absolute;
    inset: 3px 3px;
    filter: blur(2px);
  }

  &.active {
    fill: #fdfb00 !important;
    box-shadow: 0 2px 6px 0px rgba(0, 0, 0, 0.5) inset;
    padding: 17px;

    &::before {
      border-color: transparent;
    }
  }

  &.disabled {
    background: #3b3b3b;
    box-shadow: none;
    cursor: default;
    fill: #4a4a4a !important;
    border-color: #333333;
    pointer-events: none;
  }

  svg {
    width: 100%;
    height: 100%;
  }
}

.Playground__setsButton.active {
  pointer-events: none;
}

// .Playground__editToglers {
//   display: flex;

//   & .Playground__button:first-of-type {
//     margin-right: 0.5rem;
//   }
// }

.Playground__button.editToggle {
  fill: #00ff08;
}



.Playground__slotHotkey {
  width: 70px;
  height: 70px;

  position: absolute;
  top: 2px;
  right: 2px;
  color: vars.$lowerBackground;

  display: flex;
  justify-content: center;
  align-items: center;

  border-radius: 5px;
  box-shadow: 0px 0px 10px 3px rgba(0, 0, 0, 0.9);
  background: vars.$lowerBackground;
  z-index: 102;
  cursor: pointer;

  &:hover {
    color: vars.$keyColor;
  }
}

.Playground__slotHotkey.isBinding {
  color: vars.$keyColor;
  z-index: 1002;
  transform: translate(0, 0);

  .Playground__slotHotKeyText {
    white-space: normal;
    font-size: 12px;
  }
}

.Playground__slotHotKeyTextBox {
  width: 85%;
  height: 85%;

  display: flex;
  justify-content: center;
  align-items: center;

  border-radius: 5px;
  box-shadow: 0px 0px 8px 1px rgba(79, 73, 73, 0.4);
  background: radial-gradient(circle, rgb(124 124 124) 0%, rgb(55, 58, 61) 100%);
}

.Playground__slotHotKeyText {
  width: auto;
  max-width: 100%;
  padding: 0 5px;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  text-align: center;
}

.Playground__slotBox:hover {
  .Playground__RemoveButton {
  }
}

// .Playground__RemoveButton {
//   position: absolute;
//   width: 40px;
//   height: 40px;
//   right: 8px;
//   bottom: 8px;
//   z-index: 102;
//   cursor: pointer;
//   transition: transform ease-in-out vars.$transitionTime;
//   border-radius: 3px;
//   background: rgba(199, 199, 199, 0.3803921569);

//   &::before,
//   &::after {
//     content: '';
//     position: absolute;
//     width: 3px;
//     height: 50%;
//     top: 50%;
//     left: 50%;
//     border-radius: 2px;
//     background-color: rgb(255, 91, 91);
//   }

//   &::before {
//     transform: translate(-50%, -50%) rotate(-45deg);
//   }

//   &::after {
//     transform: translate(-50%, -50%) rotate(45deg);
//   }


//   &:hover {
//     &::before,
//     &::after {
//       background: rgb(255, 0, 0);
//     }
//   }
// }

















/////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////

.Playground__container {
  position: relative;
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-rows: repeat(9, 1fr);
  grid-template-columns: repeat(8, 1fr);
  overflow: hidden;
}

.Playground__slot {
  position: relative;
}

.Playground__ability,
.Playground__emptyContainer {
  position: relative;
  width: 100%;
  height: 100%;
}

.Playground__ability {
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;

  &:hover {

  }
}

.Playground__emptyContainer {
  border: 1px dashed rgba(255, 255, 255, 0.5);
  border-radius: 10px;
  cursor: pointer;

  &:hover {
    border: 1px dashed rgba(255, 255, 255, 0.9);

    &::after,
    &::before {
      border: 1px dashed rgba(255, 255, 255, 0.9);
    }
  }

  &::after,
  &::before {
    content: '';
    position: absolute;
    border: 1px dashed rgba(255, 255, 255, 0.5);
  }

  &::before {
    width: 0;
    height: 60%;
    left: calc(50% - 3px);
    top: 20%;
  }

  &::after {
    width: 60%;
    height: 0;
    top: calc(50% - 3px);
    left: 20%;
  }
}